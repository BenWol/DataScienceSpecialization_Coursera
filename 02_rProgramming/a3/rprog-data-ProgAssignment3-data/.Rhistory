swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
nxt()
nxt()
cars
mpgCity <- cars$mpgCity
mpgCity <- c(cars$mpgCity)
cars$mpgCity
myMPG <- cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
19
range(cars$price)
a <- range(cars$price)
a[2]-a[1]
var(cars$price)
sd(cars$price)
nxt()
nxt()
21
library(swirl)
swirl()
10
25
4
summary(cars$price)
quit()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
mydf
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(size))
?n
?n_distinct
submit()
tbl()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum,count > 679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts,count)
top_counts_sorted <- arrange(top_counts,desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
view(top_unique)
View(top_unique)
arrange(top_unique, desc(unique()))
arrange(top_unique, desc(unique)
)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
select(cran,ip_id)
select(cran,countries)
cran
select(cran,country)
select(cran,package)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
play()
students
gather(students,sex,grade)
gather(students,sex,count)
gather(students,sex)
gather(students,sex,-grade)
gather(students,sex,value,-grade)
students2
next()
nxt()
students2
gather(students2,sex_class,count,-grade)
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c(sex,class))
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
reset()
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread
students3
submit()
test <- gather(students3,class,grade,class1:class5,na.rm = TRUE)
test
temp1 <- gather(students3,class,grade,class1:class5,na.rm = TRUE)
temp1
spread(temp1,test,class)
spread(temp1,test,c("midterm","final"))
spread(temp1,c("midterm","final"),test)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm %>% spread(stock, price)
stocksm %>% spread(time, price)
spread(temp1,name,test)
spread(temp1,test,class1:class5)
spread(temp1,grade,test)
spread(temp1,name,test)
spread(temp1,test,grade)
temp1
spread(temp1,test,grade)
submit(9)
submit()
eex
extract_numeric("class5")
?mutate
mutate(mtcars, displ_l = disp / 61.0237)
mtcars
transmute(mtcars, displ_l = disp / 61.0237)
mutate(mtcars, cyl = NULL)
extract_numeric(class)
extract_numeric("class")
class
students3$class
?extract_numeric
temp1
mutate(temp1,class="pups")
mutate(temp1,class="class1")
mutate(temp1,class<-extract_numeric("class1"))
mutate(temp1,class=extract_numeric("class1"))
temp1$class
mutate(temp1,class=extract_numeric(temp1$class))
submit()
submit()
mutate(temp1,class=extract_numeric(temp1$class))
temp1
mutate(temp1,class=extract_numeric(temp1$class))
temp1
submit()
temp1$class
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed,failed)
sat
select(sat,-contains("total"))
temp1 <- select(sat,-contains("total"))
gather(temp1,part_sex,count,-score_range)
temp2 <- gather(temp1,part_sex,count,-score_range)
?separate
separate(temp2, part_sex, c("part","sex"))
submit()
temp3 <- separate(temp2, part_sex, c("part","sex"))
temp3
group_by(temp3,part,score)
group_by(temp3,part,sex)
group_by(temp3,part,sex)
temp4 <- group_by(temp3,part,sex)
mutate(temp4,total = sum(count),prop = count/total)
submit()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
length(unique_vals)
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
type Sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dtl
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment,hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34, seconds = 0)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singarpore)
)
sdf
))
9
9
9""
last_time <- mdy("June 17, 2008", tz = "Singarpore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrival,last_time)
how_long <- new_interval(arrive,last_time)
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
read.csv(path2csv,stringsAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
tbl_df
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
r(cran, r_version
| == "3.1.1", country == "US")
r(cran, r_version == "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arange(cran2,ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,country,desc(r_version), ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,siz_mb = size / 2^20)
mutate(cran3,size_mb = size / 2^20)
mutate(cran3,size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3,correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
setwd("\Users\benwo\Dropbox\Data_science\Coursera_DataScience_JHU\02_R_Programming\assignments\a3\rprog-data-ProgAssignment3-data")
getwd()
setwd("C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data")
getwd()
list.files()
data <- read.csv("outcome-of-care-measures.csv")
source("best.R")
best("NY","heart attack")
num = "best"
class(num)
num 0 5
num = 5
class(num)
str(data)
length(data)
nrow(data)
a <- nrow(data)
class(a)
NA
return(NA)
result <- NA
return(result)
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX","heart attack",1)
rankhospital("TX","heart attack",2)
rankhospital("TX","heart attack",4)
rankhospital("TX","heart attack",1)
rankhospital("TX","heart attack",0)
a<- rankhospital("TX","heart attack",-1)
class(a)
a
a<- rankhospital("TX","heart attack",-0)
class(a)
a
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankhospital.R')
a<- rankhospital("TX","heart attack",-1)
class(a)
a
a<- rankhospital("TX","heart attack","worst")
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankhospital.R')
a<- rankhospital("TX","heart attack","worst")
a
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankhospital.R')
a<- rankhospital("TX","heart attack","worst")
a
rankhospital("TX","heart attack","best")
rankhospital("TJ","heart attack","worst")
rankhospital("Tx","heart attacks","worst")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
data$State
levels(data$State)
sum(levels(data$State))
sum(levels(as.character(data$State))
)
size(levels(data$Size))
length(levels(data$Size))
levels(data$State)
a <- levels(data$Size)
class(a)
as.character(a)
a
a <- levels(data$Size)
a[1]
a
a <- levels(data$Size)
a
levels(data$State)
data[,2] <- as.character(data[,2])
data$State
class(data$State)
data$State <- as.character(data$State)
data$State
data$State
data <- read.csv("outcome-of-care-measures.csv")
data$State
levels(data$State)
a <- levels(data$STate)
a
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack",1)
levels(data$States)
data
data$State
levels(data$State)
a <- levels(data$State)
a
class(a)
a <- levels(data$State)
a
length(a)
states <- levels(data$State)
length(states)
states[8]
a <- as.data.frame(matrix(data=NA, nrow=length(states), ncol = 2,byrow = TRUE))
a
class(a)
colnames(a) <- c("hospital","state")
a
head(a)
rownames(a) <- states
a
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack",5)
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack",5)
rankall("heart attack",1)
rankall("heart attack",20)
source('C:/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a3/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack",20)
rankall("heart attack",5)
rankall("heart attack",20)
rankall("heart attack",200)
rankall("heart attack",2000)
rankall("heart attack",200)
rankall("heart attack",2000)
a<-rankall("heart attack",2000)
a[1,45]
a[45,1]
class(a[45,1])
a<-rankall("heart attack",200)
a
class(a[45,1])
a[45,1]
a<-rankall("heart attack",2000)
a[45,1]
class(a[45,1])
rankall("heart attack",20)
head(rankall("heart attack",20))
head(rankall("heart attack",20),10)
tail(rankall("pneunomia","worst")3)
tail(rankall("pneunomia","worst"),3)
tail(rankall("pneunomia","worst"),3)
tail(rankall("pneumomia","worst"),3)
tail(rankall("pneumonia","worst"),3)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
