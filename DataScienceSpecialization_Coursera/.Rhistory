system.time({    n <- 1000    r <- numeric(n)    for (i in 1:n) {        x <- rnorm(n)        r[i] <- mean(x)    }})
system.time({    n <- 1000    r <- numeric(n)    for (i in 1:n) {        x <- rnorm(n)        r[i] <- mean(x)    }})
system.time({    n <- 1000;    r <- numeric(n);    for (i in 1:n) { x <- rnorm(n); r[i] <- mean(x)}})
x
system.time({    n <- 1000;    r <- numeric(n);    for (i in 1:n) { x <- rnorm(n); r[i] <- mean(x)}})
r
system.time({    n <- 10000;    r <- numeric(n);    for (i in 1:n) { x <- rnorm(n); r[i] <- mean(x)}})
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
rbinom(1, size = 100, prob = 0.7)
rbinom(5, size = 100, prob = 0.7)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
c=rbind(c(1, -1/4), c(-1/4, 1))
c
d<-solve(c)
d
?solve
m <- NULL
m
?mean
setinverse <- function(solve) m <<- solve
setinverse
setinverse()
setinverse(m)
is.null(c)
!is.null(c)
source('~/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a2/ProgrammingAssignment2/cachematrix.R')
c
makeCacheMatrix(c)
source('~/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
c
a
a = rbind(c(1, -1/4), c(-1/4, 1))
a
makeCacheMatrix(a)
a
str(a)
a = matrix
str(a)
a = matrix(c(1,-1/4,-1/4,1))
a = matrix(c(1,-1/4,-1/4,1),nrow=2,ncol=2)
a
str(a)
makeCacheMatrix(a)
makeCacheMatrix()
cacheSolve(a)
y <- a
a
y
makeCacheMatrix(a)
cacheSolve(a)
source('~/cachemean.R')
source('~/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a2/ProgrammingAssignment2/cachematrix.R')
source('~/Dropbox/Data_science/Coursera_DataScience_JHU/02_R_Programming/assignments/a2/ProgrammingAssignment2/cachemean.R')
b <- vector(1:10)
b <- vector()
b <- vector(c(1:10))
b <- 1:10
b
str(b)
makeVector(b)
cachemean(b)
a
y <- makeCacheMatrix(a)
y
ca
cacheSolve(y)
b
y <- makeVector(b)
cachemean(y)
mean(c(1:10))
clean()
clean
library(ggplot2)
gplot(displ,hwy,data = mpg)
library(ggplot2)
gplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg,color = drv)
qplot(displ,hwy,data = mpg,color = drv,shape=drv)
qplot(displ,hwy,data = mpg,color = drv,shape=drv,geom = c("point","smooth"))
qplot(hwy,data = mgp, fill = drv)
qplot(hwy,data = mpg, fill = drv)
qplot(displ,hwy,data = mpg, facets = .~drv)
qplot(hwy,data = mpg, facets = .~drv)
qplot(hwy,data = mpg, facets = .~drv,binwidth = 2)
qplot(hwy,data = mpg, facets = drvËœ.,binwidth = 2)
qplot(hwy,data = mpg, facets = drv~.,binwidth = 2)
qplot(log(eno),data = maacs)
maacs
library(xtable)
install.packages("xtable")
setwd("/Users/benwo/Dropbox/Data_science/Coursera_DataScience_JHU/05_Reproducible_Research/assignments/a1/RepData_PeerAssessment1")
getwd()
unzip("activity.zip")
if(!file.exists("activity.zip")){
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,destfile = "activity.zip",method = "curl")
}
if(!file.exists("activity.csv")){
unzip("activity.zip")
}
if(!file.exists("activity.zip")){
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,destfile = "activity.zip",method = "curl")
}
if(!file.exists("activity.csv")){
unzip("activity.zip")
}
act <- read.csv("activity.csv")
head(act)
act
head(act)
24*60/5
nrow(act)
nrow(act)/288
act_NAfree <- act[!is.na(act$steps),]
head(act_NAfree)
plot(act_NAfree)
plot(act_NAfree$steps)
hist(act_NAfree)
hist(act_NAfree$steps)
hist(act_NAfree$steps,100)
hist(act_NAfree$steps,5000)
str(act)
summary(act)
mean(act_NAfree$steps)
mean(act$steps)
mean(act_NAfree$steps)
install.packages("knitr")
install.packages("knitr")
install.packages("markdown")
class(act)
class(act$steps)
class(act$date)
class(act$interval)
hist(act$steps)
hist(act$steps,1000)
hist(log10(act$steps),1000)
hist(act$steps,1000)
hist(log10(act$steps),1000)
hist(log10(act$steps+1),1000)
hist(log10(act$steps),1000)
hist(log10(act$steps),100)
hist(log10(act$steps),500)
hist(log10(act$steps),200)
hist(log10(act$steps),300)
act_zeroFree <- act[act$steps != 0,]
hist(act_zeroFree)
hist(act_zeroFree$steps)
hist(act_zeroFree$steps,100)
hist(log10(act$steps),100)
hist(act_zeroFree$steps,100)
hist(act_zeroFree$steps,100,log="y")
hist(act_zeroFree$steps,log="y")
act_hist  <- hist(act,100)
act_hist  <- hist(act$steps,100)
plot(act_hist,log="y")
plot(density(act$steps), log="y")
density(act)
hist.data = hist(act, plot=F)
hist.data = hist(act, plot=FALSE)
hist.data = hist(act$steps, plot=FALSE)
hist.data$counts = log10(hist.data$counts)
plot(hist.data)
hist.data$breaks = 500
plot(hist.data)
hist.data$counts = log10(hist.data$counts)
hist.data$breaks = 500
plot(hist.data)
hist.data = hist(act$steps,breaks=100, plot=F)
hist.data$counts = log10(hist.data$counts)
plot(hist.data)
hist.data = hist(act$steps,breaks=500, plot=F)
hist.data$counts = log10(hist.data$counts)
plot(hist.data)
hist.data = hist(act$steps,breaks=100, plot=F)hist.data$counts = log10(hist.data$counts)
> plot(hist.data)
head(act)
sum(act$steps)
sum(act$steps,rm.na = T)
sum(act$steps,na.rm = T)
sum(act_NAfree$steps)
act_noNA <- act[!is.na(act$steps),]
sum(act_noNA$steps)
head(act_noNA)
60*24
60*24/5
dim(act_noNA)
dim(act)
library(data.table)
a <- split(act_NAfree$steps,act_noNA$data)
act_noNA <- data.table(act_noNA)
class(act_noNA)
act_noNA[,mean(steps),by=date]
act_noNA[,sum(steps),by=date]
act[,sum(steps),by=date]
act <- data.table(act)
act[,sum(steps),by=date]
a <- act[,sum(steps),by=date]
mean(a$V1)
a <- act_noNA[,sum(steps),by=date]
mean(a$V1)
median(a$V1)
boxplot(a$V1)
hist(a$V1)
hist(a$V1,breaks = dim(a)[1])
dim(a)[1]
hist(a$V1,breaks = dim(a)[1])
hist(a$V1,breaks = 100
)
hist(a$V1,breaks = 1000)
hist(a$V1,breaks = dim(a)[1])
plot(a)
plot(a$date,a$V1)
)
hist(a$date,a$V1)
hist(length(a$date),a$V1)
hist(a$V1)
hist(a$V1,100)
hist(a$V1,10)
hist(a$V1,25)
hist(a$V1,50)
hist(a$V1,25)
hist(a$V1,50)
hist(a$V1,100)
sum(a$V1==0)
sum(a$V1==1)
sum(a$V1==10)
hist(a$V1,breaks = dim(a)[1])
act$steps
tsteps_per_day <- act_noNA[,sum(steps),by=date]
head(tsteps_per_day)
colnames(tsteps_per_day) <- c("date","totalSteps")
head(tsteps_per_day)
hist(tsteps_per_day$totalSteps)
hist(tsteps_per_day$totalSteps,breaks = 100)
hist(tsteps_per_day$totalSteps,breaks = 50)
hist(tsteps_per_day$totalSteps,breaks = 100)
hist(tsteps_per_day$totalSteps,breaks = 50)
hist(tsteps_per_day$totalSteps,breaks = 30)
hist(tsteps_per_day$totalSteps,breaks = 50)
hist(tsteps_per_day$totalSteps,breaks = 50,main="Histogram of numbers of total steps per day within the dataset")
hist(tsteps_per_day$totalSteps,breaks = 50,main="Histogram of counts of total steps per day within the dataset",xlab = "counts of total steps per day")
act_noNA
tsteps_per_day <- act_noNA[,sum(steps),by=date]
tsteps_per_day
act_noNA_2[15264,2] <- NA
act_noNA_2  <- act_noNA
act_noNA_2[15264,2] <- NA
dim(act_noNA_2)
act_noNA_2[15264,3] <- NA
act_noNA_2
act_noNA_2[15264,1] <- NA
act_noNA_2
tsteps_per_day_2 <- act_noNA_2[,sum(steps),by=date]
tsteps_per_day_2
hist(tsteps_per_day_2$V1,100)
hist(tsteps_per_day$V1,100)
dataset <- act
dataset$date <- as.Date(dataset$date)
dataset$minute <- dataset$interval %% 100
dataset$hour <- dataset$interval %/% 100
dataset$elapsed <- dataset$hour * 60 + dataset$minute
# interval as a factor
dataset$sInterval <- as.factor(sprintf("%02d:%02d", dataset$hour, dataset$minute))
head(dataset)
head(dataset,100)
tail(dataset)
meanStepsPerInterval <- aggregate(steps ~ sInterval, data=dataset, FUN="mean", na.exclude=T)
head(meanStepsPerInterval)
head(dataset)
dim(meanStepsPerInterval)
dim(dataset)
dataset[287]
dataset[287:290,]
sum(act$interval == 2355)
class(act$date)
act$date  <- as.Date(act$date)
class(act$date)
act_noNA
nrows(tsteps_per_day)
nrow(tsteps_per_day)
avg_daily_pattern <- act_NAfree[,mean(steps),by=interval]
class(act_NAfree)
avg_daily_pattern <- act_noNA[,mean(steps),by=interval]
avg_daily_pattern
plot(avg_daily_pattern$V1)
plot(interval,avg_daily_pattern$averageNumberOfSteps)
colnames(avg_daily_pattern) <- c("interval","averageNumberOfSteps")
plot(interval,avg_daily_pattern$averageNumberOfSteps)
head(avg_daily_pattern)
plot(avg_daily_pattern$interval,avg_daily_pattern$averageNumberOfSteps)
plot(avg_daily_pattern$interval,avg_daily_pattern$averageNumberOfSteps,type = "l")
act
avg_daily_pattern <- act[,mean(steps),by=interval]
colnames(avg_daily_pattern) <- c("interval","averageNumberOfSteps")
plot(avg_daily_pattern$interval,avg_daily_pattern$averageNumberOfSteps,type = "l")
avg_daily_pattern
max(avg_daily_pattern$averageNumberOfSteps)
max(avg_daily_pattern$averageNumberOfSteps)
avg_daily_pattern <- act_noNA[,mean(steps),by=interval]
colnames(avg_daily_pattern) <- c("interval","averageNumberOfSteps")
plot(avg_daily_pattern$interval,avg_daily_pattern$averageNumberOfSteps,type = "l")
max(avg_daily_pattern$averageNumberOfSteps)
avg_daily_pattern[max(avg_daily_pattern$averageNumberOfSteps),]
avg_daily_pattern[max(avg_daily_pattern$averageNumberOfSteps),](1)
avg_daily_pattern[max(avg_daily_pattern$averageNumberOfSteps),][1]
avg_daily_pattern$interval[max(avg_daily_pattern$averageNumberOfSteps),]
a <- avg_daily_pattern[max(avg_daily_pattern$averageNumberOfSteps),]
a(1)
a[1]
dim(a)
a[1[1]]
a$interval
a <- avg_daily_pattern[max(avg_daily_pattern$averageNumberOfSteps),]$interval
avg_daily_pattern[max(avg_daily_pattern$averageNumberOfSteps),]$interval
nrow(avg_daily_pattern)
avg_daily_pattern[max(avg_daily_pattern$averageNumberOfSteps),]$interval
avg_daily_pattern
avg_daily_pattern$interval
plot(avg_daily_pattern$interval,avg_daily_pattern$averageNumberOfSteps,type = "l")
plot(avg_daily_pattern$averageNumberOfSteps,type = "l")
500/60
max(avg_daily_pattern$averageNumberOfSteps)
avg_daily_pattern$averageNumberOfSteps == max(avg_daily_pattern$averageNumberOfSteps)
avg_daily_pattern[avg_daily_pattern$averageNumberOfSteps == max(avg_daily_pattern$averageNumberOfSteps),]
minute <- dataset$interval %% 100
minute
minute <- dataset$interval / 100
minute
minute <- dataset$interval %% 100
minute
act$interval
minute <- dataset$interval %/% 100
minute
sum(is.na(act$steps))/(60*24/5)
act_fillNA <- act
avg_daily_pattern$averageNumberOfSteps
avg_daily_pattern$interval
nrow(act)
act$steps(1)
act$steps[1]
act[i,]
act[1,]
act[1,3]
act[1;3]
act[1,interval]
act[5,interval]
avg_daily_pattern$interval == act[5,interval]
avg_daily_pattern[avg_daily_pattern$interval == act[5,interval],]
avg_daily_pattern[avg_daily_pattern$interval == act[5,interval],]$averageNumberOfSteps
act$steps[5] <- avg_daily_pattern[avg_daily_pattern$interval == act[5,interval],]$averageNumberOfSteps
head(act)
for(i in 1:nrow(act)){
if (is.na(act$steps[i])) {
tmp_interval <- act[i,interval]
act$steps[i] <- avg_daily_pattern[avg_daily_pattern$interval == act[i,interval],]$averageNumberOfSteps
}
}
head(avg_daily_pattern)
act_fillNA <- act
for(i in 1:nrow(act_fillNA)){
if (is.na(act_fillNA$steps[i])) {
tmp_interval <- act_fillNA[i,interval]
act$steps[i] <- avg_daily_pattern[avg_daily_pattern$interval == act_fillNA[i,interval],]$averageNumberOfSteps
}
}
head(act)
act  <- read.csv("activity.csv")
act_fillNA <- act
for(i in 1:nrow(act_fillNA)){
if (is.na(act_fillNA$steps[i])) {
tmp_interval <- act_fillNA[i,interval]
act$steps[i] <- avg_daily_pattern[avg_daily_pattern$interval == act_fillNA[i,interval],]$averageNumberOfSteps
}
}
act <- data.table(act)
act_fillNA <- act
for(i in 1:nrow(act_fillNA)){
if (is.na(act_fillNA$steps[i])) {
tmp_interval <- act_fillNA[i,interval]
act$steps[i] <- avg_daily_pattern[avg_daily_pattern$interval == act_fillNA[i,interval],]$averageNumberOfSteps
}
}
head(act)
act  <- read.csv("activity.csv")
act <- data.table(act)
act_fillNA <- act
for(i in 1:nrow(act_fillNA)){
if (is.na(act_fillNA$steps[i])) {
tmp_interval <- act_fillNA[i,interval]
act_fillNA$steps[i] <- avg_daily_pattern[avg_daily_pattern$interval == act_fillNA[i,interval],]$averageNumberOfSteps
}
}
head(act,10)
head(avg_daily_pattern,10)
head(act_fillNA,10)
class(act_fillNA)
tsteps_per_day_fillNA <- act_fillNA[,sum(steps),by=date]
head(tsteps_per_day_fillNA)
tsteps_per_day_fillNA <- act_fillNA[,sum(steps),by=date]
colnames(tsteps_per_day_fillNA) <- c("date","totalSteps")
hist(tsteps_per_day_fillNA$totalSteps,breaks = 50,main="Histogram of counts of total steps per day within the dataset (NA values filled with avg steps per 5-minute interval)",xlab = "counts of total steps per day")
mean(tsteps_per_day_fillNA$totalSteps,na.rm = TRUE)
median(tsteps_per_day_fillNA$totalSteps,na.rm = TRUE)
mean(tsteps_per_day$totalSteps,na.rm = TRUE)
median(tsteps_per_day$totalSteps,na.rm = TRUE)
mean(tsteps_per_day$totalSteps,na.rm = TRUE)
median(tsteps_per_day$totalSteps,na.rm = TRUE)
act_noNA <- act[!is.na(act$steps),]
tsteps_per_day <- act_noNA[,sum(steps),by=date]
colnames(tsteps_per_day) <- c("date","totalSteps")
hist(tsteps_per_day$totalSteps,breaks = 50,main="Counts of total steps per day within the dataset",xlab = "counts of total steps per day")
mean(tsteps_per_day$totalSteps,na.rm = TRUE)
median(tsteps_per_day$totalSteps,na.rm = TRUE)
weekdays(act$date)
act$date <- as.Date(act$date)
weekdays(act$date)
act_fillNA <- mutate(act_fillNA, DayOfWeek = factor(1 * (weekdays(act$date)<6)))
weekdays(act$date)<6
sum(weekdays(act$date)<6)
levels(weekdays(act$date))
sum(weekdays(act$date) != c("Saturday","Sunday"))
sum(weekdays(act$date) == c("Saturday","Sunday"))
sum(weekdays(act$date) == c("Saturday","Sunday"))/288
sum(weekdays(act$date) == c("Saturday","Sunday"))/288
sum(weekdays(act$date) != c("Saturday","Sunday"))/288
weekdays(act$date) == c("Saturday","Sunday")
sum(weekdays(act$date) != "Saturday" | weekdays(act$date) != "Sunday")/288
sum(weekdays(act$date) == "Saturday" | weekdays(act$date) == "Sunday")/288
sum(weekdays(act$date) != "Saturday" & weekdays(act$date) != "Sunday")/288
sum(weekdays(act$date) %in% c("Saturday","Sunday"))
sum(weekdays(act$date) %in% c("Saturday","Sunday"))/288
act_fillNA <- mutate(act_fillNA, DayOfWeek = factor(1 * (weekdays(act$date) %in% c("Saturday","Sunday")),labels = c("weekend","weekday") ))
library(dplyr)
act_fillNA <- mutate(act_fillNA, DayOfWeek = factor(1 * (weekdays(act$date) %in% c("Saturday","Sunday")),labels = c("weekend","weekday") ))
head(act_fillNA)
table(act_fillNA$DayOfWeek)
weekdays(as.Date("2012-10-01"))
weekdays(act$date) %in% c("Saturday","Sunday")
act_fillNA <- mutate(act_fillNA, DayOfWeek = factor(1 * (weekdays(act$date) %in% c("Saturday","Sunday")),labels = c("weekday","weekend") ))
table(act_fillNA$DayOfWeek)
weekdays(as.Date("2012-10-06"))
library(dplyr)
act_fillNA <- mutate(act_fillNA, DayOfWeek = factor(1 * (weekdays(act$date) %in% c("Saturday","Sunday")),labels = c("weekday","weekend") ))
tables(act_fillNA$DayOfWeek)
avg_daily_pattern_weekday <- act_fillNA[,mean(steps),by=interval,by=DayOfWeek]
avg_daily_pattern_weekday <- act_fillNA[,mean(steps),by=interval,DayOfWeek]
head(act_fillNA)
avg_daily_pattern_weekday <- aggregate(steps ~ interval + DayOfWeek, data=act_fillNA, FUN="mean")
avg_daily_pattern_weekday
class(avg_daily_pattern_weekday)
names(avg_daily_pattern_weekday)
xyplot(steps ~ interval | DayOfWeek, data=avg_daily_pattern_weekday, type = "l",layout=c(1,2))
library(lattice)
xyplot(steps ~ interval | DayOfWeek, data=avg_daily_pattern_weekday, type = "l",layout=c(1,2))
avg_daily_pattern_weekday <- act_fillNA[,mean(steps),by=list(interval,DayOfWeek)]
avg_daily_pattern_weekday
xyplot(V1 ~ interval | DayOfWeek, data=avg_daily_pattern_weekday, type = "l",layout=c(1,2))
dev.off()
xyplot(V1 ~ interval | DayOfWeek, data=avg_daily_pattern_weekday, type = "l",layout=c(1,2))
xyplot(V1 ~ interval | DayOfWeek, data=avg_daily_pattern_weekday, type = "l",layout=c(1,2))
par(mfrow = c(2, 1))
plot(avg_daily_pattern_weekday[avg_daily_pattern_weekday$DayOfWeek==weekday,]$averageNumberOfSteps,type = "l")
plot(avg_daily_pattern_weekday[avg_daily_pattern_weekday$DayOfWeek==weekend,]$averageNumberOfSteps,type = "l")
avg_daily_pattern_weekday$DayOfWeek
avg_daily_pattern_weekday$DayOfWeek[1]
par(mfrow = c(2, 1))
plot(avg_daily_pattern_weekday[avg_daily_pattern_weekday$DayOfWeek==factor(weekday),]$averageNumberOfSteps,type = "l")
plot(avg_daily_pattern_weekday[avg_daily_pattern_weekday$DayOfWeek==factor(weekend),]$averageNumberOfSteps,type = "l")
avg_daily_pattern_weekday$DayOfWeek[1] == weekend
avg_daily_pattern_weekday$DayOfWeek[1] == "weekend"
par(mfrow = c(2, 1))
plot(avg_daily_pattern_weekday[avg_daily_pattern_weekday$DayOfWeek=="weekday",]$averageNumberOfSteps,type = "l")
plot(avg_daily_pattern_weekday[avg_daily_pattern_weekday$DayOfWeek=="weekend",]$averageNumberOfSteps,type = "l")
plot(avg_daily_pattern_weekday[avg_daily_pattern_weekday$DayOfWeek=="weekday",]$averageNumberOfSteps,type = "l")
avg_daily_pattern_weekdays <- act_fillNA[,mean(steps),by=list(interval,DayOfWeek)]
colnames(avg_daily_pattern_weekdays) <- c("interval","DayOfWeek","averageNumberOfSteps")
par(mfrow = c(2, 1))
plot(avg_daily_pattern_weekdays[avg_daily_pattern_weekdays$DayOfWeek=="weekday",]$averageNumberOfSteps,type = "l")
plot(avg_daily_pattern_weekdays[avg_daily_pattern_weekdays$DayOfWeek=="weekend",]$averageNumberOfSteps,type = "l")
xlim=c(min(avg_daily_pattern_weekdays[avg_daily_pattern_weekdays$DayOfWeek=="weekday",]$averageNumberOfSteps), max(avg_daily_pattern_weekdays[avg_daily_pattern_weekdays$DayOfWeek=="weekday",]$averageNumberOfSteps))
xlim
plot(avg_daily_pattern_weekdays[avg_daily_pattern_weekdays$DayOfWeek=="weekday",]$averageNumberOfSteps,type = "l",main="Steps of the daily 5-minute intervals averaged over all weekdays", xlab = "5-minute interval of the day", ylab = "average steps",xlim=c(0, 250))
dev.off()
plot(avg_daily_pattern_weekdays[avg_daily_pattern_weekdays$DayOfWeek=="weekday",]$averageNumberOfSteps,type = "l",main="Steps of the daily 5-minute intervals averaged over all weekdays", xlab = "5-minute interval of the day", ylab = "average steps",xlim=c(0, 250))
plot(avg_daily_pattern_weekdays[avg_daily_pattern_weekdays$DayOfWeek=="weekend",]$averageNumberOfSteps,type = "l",main="Steps of the daily 5-minute intervals averaged over all weekend", xlab = "5-minute interval of the day", ylab = "average steps", xlim=c(0,250))
